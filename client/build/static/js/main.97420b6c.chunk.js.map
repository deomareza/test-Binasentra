{"version":3,"sources":["helpers/currencify.jsx","helpers/premiCalculate.jsx","query/index.jsx","components/UserUpdate.jsx","config/graphql.js","components/UserRequestForm.jsx","components/UserCheckPremi.jsx","components/UserRequestList.jsx","components/AdminRequestList.jsx","components/AdminOkupasi.jsx","pages/Login.jsx","pages/CustomerDashboard.jsx","pages/AdminDashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","currencify","value","valueStr","toFixed","toString","valueCommas","split","reverse","output","i","length","premiDasar","price","rate","time","adminFee","biayaTotal","GET_PREMI","gql","GET_OKUPASI","GET_ONE_OKUPASI","INSERT_OKUPASI","GET_USER_REQUESTS","GET_ALL_REQUESTS","GET_ONE_USER","USER_LOGIN","UPDATE_USER","ADD_ONE_REQUEST","GET_ONE_REQUEST","ADMIN_UPDATE_STATUS","UserUpdate","userInfo","JSON","parse","localStorage","getItem","console","log","_id","useState","name","email","userInput","setUserInput","useQuery","variables","loading","data","error","useMutation","refetchQueries","query","updateUser","handleInput","e","key","target","useEffect","findOneUser","className","onChange","type","defaultValue","onClick","preventDefault","client","ApolloClient","uri","cache","InMemoryCache","UserRequestForm","history","useHistory","useRouteMatch","okupasiData","onCompleted","insertRequest","push","addRequestComplete","addRequest","okupasi","harga","konstruksi","alamat","provinsi","kota","kabupaten","daerah","gempa","status","formInput","setFormInput","inputError","setInputError","handleInputChange","checked","onSubmit","checkFormInput","disabled","map","item","min","placeholder","writeQuery","premi","UserCheckPremi","id","useParams","useLazyQuery","getOneOkupasi","dataOku","findOneRequest","findOneOkupasi","invoice","path","UserRequestList","findUserRequests","request","polis","AdminRequestList","refetch","loadingOku","adminUpdateStatus","okupasiSearch","find","updateStatus","AdminOkupasi","addMode","setAddMode","addInput","setAddInput","insertOkupasi","toggleAdd","max","step","Login","inputEmail","setInputEmail","userLogin","userData","role","setItem","stringify","CustomerDashboard","match","url","clear","AdminDashboard","App","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kFAiBAA,EAAOC,QAAU,CAAEC,WAjBnB,SAAoBC,GAElB,IAAIC,GADJD,EAAQA,EAAME,QAAQ,IACDC,WACjBC,EAAcH,EAASI,MAAM,KACjCJ,EAAWG,EAAY,GAAGC,MAAM,IAAIC,UAGpC,IADA,IAAIC,EAAS,GACLC,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,IAC7BA,EAAE,IAAK,GAAKA,EAAI,IACnBD,EAAS,IAAMA,GAElBA,EAASN,EAASO,GAAKD,EAExB,OAAOA,EAAM,WAAOH,EAAY,O,iBCblC,SAASM,EAAWC,EAAOC,EAAMC,GAC/B,OAAQF,EAAQC,GAAS,IAAOC,GAUlChB,EAAOC,QAAU,CAACY,aAAYI,SAPb,IAOuBC,WALxC,SAAoBJ,EAAOC,EAAMC,GAC/B,OAAQH,EAAWC,EAAOC,EAAMC,GAHjB,O,o8FCFV,IAAMG,EAAYC,cAAH,KAkBTC,EAAcD,cAAH,KAUXE,EAAkBF,cAAH,KAkBfG,GATeH,cAAH,KASKA,cAAH,MASdI,EAAoBJ,cAAH,KAWjBK,EAAmBL,cAAH,KA2BhBM,GAZYN,cAAH,KAYMA,cAAH,MASZO,EAAaP,cAAH,KAUVQ,EAAcR,cAAH,KASXS,EAAkBT,cAAH,KAQfU,EAAkBV,cAAH,KAUfW,EAAsBX,cAAH,KCzIzB,SAASY,IACd,IAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aACjDC,QAAQC,IAAIN,EAASO,IAAK,mBAFC,MAGOC,mBAAS,CAAEC,KAAM,GAAIC,MAAO,KAHnC,mBAGpBC,EAHoB,KAGTC,EAHS,OAIMC,mBAASpB,EAAc,CACtDqB,UAAW,CACTP,IAAKP,EAASO,OAFVQ,EAJmB,EAInBA,QAAgBC,GAJG,EAIVC,MAJU,EAIHD,MAJG,EAUNE,sBAAYvB,EAAa,CAC5CwB,eAAgB,CAAC,CAAEC,MAAO3B,MADrB4B,EAVoB,oBAoC3B,SAASC,EAAYC,GACnB,IAAIC,EAAMD,EAAEE,OAAOhB,KACfvC,EAAQqD,EAAEE,OAAOvD,MAErB0C,EAAa,2BAAID,GAAL,kBAAiBa,EAAOtD,KACpCmC,QAAQC,IAAIK,GAGd,OA9BAe,qBAAU,WACLV,GACDJ,EAAa,CACXH,KAAMO,EAAKW,YAAYlB,KACvBC,MAAOM,EAAKW,YAAYjB,UAG3B,CAACM,IAuBAD,EAAgB,KAGlB,uBAAMa,UAAU,kCAAhB,UACE,sBAAKA,UAAU,qBAAf,UACE,yCACA,uBACEA,UAAU,mBACVC,SAAUP,EACVQ,KAAK,OACLrB,KAAK,OACLsB,aAAcf,EAAKW,YAAYlB,UAGnC,sBAAKmB,UAAU,qBAAf,UACE,0CACA,uBACEA,UAAU,mBACVC,SAAUP,EAEVQ,KAAK,QACLrB,KAAK,QACLsB,aAAcf,EAAKW,YAAYjB,WAGnC,wBAAQsB,QA9CZ,SAA0BT,GACxBA,EAAEU,iBACFZ,EAAW,CACTP,UAAW,CACTP,IAAKP,EAASO,IACdS,KAAM,CACJP,KAAME,EAAUF,KAChBC,MAAOC,EAAUD,WAuCckB,UAAU,wBAAwBE,KAAK,SAA1E,4BCtEC,IAAMI,EAAS,IAAIC,eAAa,CAErCC,IAAI,0BACJC,MAAO,IAAIC,kBCKN,SAASC,IACd,IAAMC,EAAUC,cAEVzC,GADQ0C,cACGzC,KAAKC,MAAMC,aAAaC,QAAQ,cAHjB,EAIcS,mBAASzB,GAA/C2B,EAJwB,EAIxBA,QAAsB4B,GAJE,EAIf1B,MAJe,EAIRD,MAJQ,EAQ5BE,sBAAYtB,EAAiB,CAC/BgD,YAAa,SAAC5B,IA+DhB,YAAgD,IAAlB6B,EAAiB,EAAjBA,cAC5BL,EAAQM,KAAR,0BAAgCD,EAActC,MA/D5CwC,CAAmB/B,IAErBG,eAAgB,CACd,CAAEC,MAAO7B,EAAmBuB,UAAW,CAAEP,IAAKP,EAASO,SAb3B,mBAM9ByC,EAN8B,iBAO5BhC,KAP4B,EAOHD,QAUKP,mBAAS,CACzCzB,KAAM,EACNkE,QAAS,GACTC,MAAO,EACPC,WAAY,UACZC,OAAQ,GACRC,SAAU,GACVC,KAAM,GACNC,UAAW,GACXC,OAAQ,GACRC,OAAO,EACPC,OAAQ,aA5BsB,mBAiBzBC,EAjByB,KAiBdC,EAjBc,OA8BIpD,oBAAS,GA9Bb,mBA8BzBqD,EA9ByB,KA8BbC,EA9Ba,KAgChC,SAASC,EAAkBxC,GACzB,IAAIC,EAAMD,EAAEE,OAAOhB,KACfvC,EAAQqD,EAAEE,OAAOvD,MAErB4F,GAAc,GAEF,SAARtC,GAA0B,UAARA,IACpBtD,GAASA,GAGC,UAARsD,IACkBtD,IAApBqD,EAAEE,OAAOuC,SAGXJ,EAAa,2BAAKD,GAAN,kBAAkBnC,EAAMtD,KA8BtC,OAAI6C,EAAgB,KAGlB,qBAAKa,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,iCAAd,6CAIA,uBAAMqC,SA1BZ,SAA0B1C,GACxBA,EAAEU,iBAXJ,WACE,IAAK,IAAMT,KAAOmC,EAChB,GAAuB,KAAnBA,EAAUnC,IAAkC,MAAnBmC,EAAUnC,GAErC,OADAsC,GAAc,IACP,EAGX,OAAO,EAMHI,IACFlB,EAAW,CACTlC,UAAW,CACTP,IAAKP,EAASO,IACdS,KAAM2C,MAmB0B/B,UAAU,0BAA5C,UACE,+DACA,yBACEC,SAAUkC,EACVtD,KAAK,OACLmB,UAAU,cAHZ,UAKE,wBAAQ1D,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,mBAGF,4CACA,yBACE2D,SAAUkC,EACVtD,KAAK,UACLmB,UAAU,eACVG,aAAa,GAJf,UAME,wBAAQ7D,MAAM,GAAGiG,UAAQ,EAAzB,kCAGCxB,EAAYM,QAAQmB,KAAI,SAACC,GACxB,OACE,wBAAuBnG,MAAOmG,EAAK9D,IAAnC,SACG8D,EAAK5D,MADK4D,EAAK9D,WAOxB,mDACA,uBACEsB,SAAUkC,EACVtD,KAAK,QACLqB,KAAK,SACLwC,IAAI,IACJC,YAAY,IACZ3C,UAAU,2BAGZ,+CACA,yBACEC,SAAUkC,EACVtD,KAAK,aACLmB,UAAU,cAHZ,UAKE,wBAAQ1D,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,wBAGF,+DACA,uBACE2D,SAAUkC,EACVtD,KAAK,SACLmB,UAAU,yBACVE,KAAK,SAGP,6CACA,uBACED,SAAUkC,EACVtD,KAAK,WACLmB,UAAU,yBACVE,KAAK,SAGP,yCACA,uBACED,SAAUkC,EACVtD,KAAK,OACLmB,UAAU,yBACVE,KAAK,SAGP,8CACA,uBACED,SAAUkC,EACVtD,KAAK,YACLmB,UAAU,wBACVE,KAAK,SAGP,2CACA,uBACED,SAAUkC,EACVtD,KAAK,SACLmB,UAAU,yBACVE,KAAK,SAGP,+CACA,uBACED,SAAUkC,EACVtD,KAAK,QACLmB,UAAU,eACVE,KAAK,aAEN+B,EACC,oBAAIjC,UAAU,eAAd,mCAEA,GAGF,uBAAOE,KAAK,SAAS5D,MAAM,YAAY0D,UAAU,8BDvM3DM,EAAOsC,WAAW,CAChBpD,MAAOlC,EACP8B,KAAM,CACJyD,MAAO,M,oBEJJ,SAASC,IAAkB,IACxBC,EAAOC,cAAPD,GACFnC,EAAUC,cAFe,EAM3BoC,uBAAaxF,GANc,mBAI7ByF,EAJ6B,YAKIC,GALJ,EAK3BhE,QAL2B,EAKFC,MALE,EAQEH,mBAAShB,EAAiB,CACzDiB,UAAW,CAAEP,IAAKoE,GAClB/B,YAAa,YAAyB,IAAtBoC,EAAqB,EAArBA,eACdF,EAAc,CAAEhE,UAAW,CAAEP,IAAKyE,EAAe/B,cAH7ClC,EARuB,EAQvBA,QAAgBC,GARO,EAQdC,MARc,EAQPD,MAWxB,OAAID,EAAgB,KAEfC,GAAS+D,EAGZ,sBAAKnD,UAAU,mCAAf,UACE,oBAAIA,UAAU,gBAAd,0BAEA,sBAAKA,UAAU,gCAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,eAAd,mBAEA,oDACA,kDAAqBmD,EAAQE,eAAexE,QAC5C,gDAAmBO,EAAKgE,eAAeE,cAGzC,sBAAKtD,UAAU,gBAAf,UACE,oBAAIA,UAAU,eAAd,qBAEA,+BAAKZ,EAAKgE,eAAejG,KAAzB,eAGF,sBAAK6C,UAAU,gBAAf,UACE,oBAAIA,UAAU,eAAd,4BAEA,qCAAQ3D,qBAAW+C,EAAKgE,eAAe9B,gBAI3C,sBAAKtB,UAAU,+BAAf,UACE,qBAAIA,UAAU,UAAd,0BACgB,IACd,uCACM,IACH3D,qBACCW,qBACEoC,EAAKgE,eAAe9B,MACpB6B,EAAQE,eAAenG,KACvBkC,EAAKgE,eAAejG,aAM5B,qBAAI6C,UAAU,UAAd,kCACuB,wCAAW3D,qBAAWe,kBAG7C,qBAAI4C,UAAU,gBAAd,oBACU,IACR,uCACM,IACH3D,qBACCgB,qBACE+B,EAAKgE,eAAe9B,MACpB6B,EAAQE,eAAenG,KACvBkC,EAAKgE,eAAejG,gBAM9B,qBAAK6C,UAAU,sCAAf,SACE,wBACEI,QAAS,WArEjB,IAAoBmD,IAsEC,YArEnB3C,EAAQM,KAAKqC,IAuEPvD,UAAU,0BAJZ,oCA9DwB,KCzBzB,SAASwD,IAAmB,IAAD,EAC1B5C,EAAUC,cACVzC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aACjDC,QAAQC,IAAIN,GAHoB,MAICa,mBAAStB,EAAmB,CAC3DuB,UAAW,CAAEP,IAAKP,EAASO,OADrBQ,EAJwB,EAIxBA,QAAgBC,GAJQ,EAIfC,MAJe,EAIRD,MAQxB,OAAGD,EAAgB,KAEiB,IAAjCC,EAAKqE,iBAAiB1G,OACvB,8BACE,qDAKJ,qBAAKiD,UAAU,SAAf,SAIE,wBAAOA,UAAU,SAAjB,UACE,gCACE,qBAAIA,UAAU,mCAAd,UACE,oBAAIA,UAAU,OAAd,sBACA,oDACA,4CACA,wCACA,4BAIJ,0CAEIZ,EAAKqE,wBAFT,aAEI,EAAuBjB,KAAI,SAAAkB,GACzB,OACE,qBAAI1D,UAAU,0BAAd,UACE,oBAAIA,UAAU,OAAd,SAAsB0D,EAAQC,MAAMD,EAAQC,MAAM,iBAClD,oDACA,6BAAKD,EAAQJ,UACb,6BAAsB,aAAjBI,EAAQ5B,OAAoB,gBAAgB,kBACjD,6BAAI,wBAAQ9B,UAAU,yBAAyBI,QAAS,WArCtE,IAA2BzB,IAqCoE+E,EAAQ/E,IApCrGiC,EAAQM,KAAR,0BAAgCvC,KAoChB,wCC5Cb,SAASiF,IAAoB,IAAD,IACS3E,mBAASrB,GAA3CuB,EADyB,EACzBA,QAAgBC,GADS,EAChBC,MADgB,EACTD,MAAMyE,EADG,EACHA,QADG,EAEc5E,mBAASzB,GAAvCsG,EAFgB,EAEzB3E,QAA2BgE,EAFF,EAEJ/D,KAFI,EAILE,sBAAYpB,EAAqB,CAC3D8C,YAAa,WACX6C,KACAtE,eAAe,CAAC,CAACC,MAAM5B,MAHpBmG,EAJ0B,oBAU3BC,EAAgB,SAAC1H,GACrB,OAAO6G,EAAQ9B,QAAQ4C,MAAK,SAACxB,GAAD,OAAUA,EAAK9D,MAAQrC,MAOrD,SAAS4H,EAAavF,EAAK2E,EAASxB,GAClCrD,QAAQC,IAAIC,GACZoF,EAAkB,CAAE7E,UAAW,CAAEP,MAAK2E,UAASxB,YAIjD,OAAI3C,GAAW2E,EAAmB,KAGhC,sBAAK9D,UAAU,gCAAf,UACE,oBAAIA,UAAU,eAAd,0BAEA,wBAAOA,UAAU,GAAjB,UACE,gCACE,qBAAIA,UAAU,mCAAd,UACE,oBAAIA,UAAU,OAAd,wBACA,wCACA,8CACA,uCACA,wCACA,4BAIJ,0CAEEZ,EAAKsE,eAFP,aAEE,EAAclB,KAAI,SAACkB,GACjB,OACE,qBAAI1D,UAAU,+BAAd,UACE,6BAAK0D,EAAQJ,UACb,6BAAKI,EAAQlC,SACb,6BAAKwC,EAAcN,EAAQrC,SAASxC,OACpC,qCACM,IACHxC,qBACCgB,qBACEqG,EAAQpC,MACR0C,EAAcN,EAAQrC,SAASnE,KAC/BwG,EAAQvG,UAId,6BAAKuG,EAAQ5B,SACb,+BACE,wBAAQ1B,QAAS,WAAK8D,EAAaR,EAAQ/E,IAAK+E,EAAQJ,QAAS,aAActD,UAAU,8BAAzF,qBAGA,wBAAQI,QAAS,WAAK8D,EAAaR,EAAQ/E,IAAK+E,EAAQJ,QAAS,aAActD,UAAU,iCAAzF,qCChEX,SAASmE,IAAgB,IAAD,IACalF,mBAASzB,GAA3C2B,EADqB,EACrBA,QAAgBC,GADK,EACZC,MADY,EACLD,MAAMyE,EADD,EACCA,QADD,EAEGjF,oBAAS,GAFZ,gCAGCA,oBAAS,IAHV,mBAGtBwF,EAHsB,KAGbC,EAHa,OAIGzF,mBAAS,CAAEC,KAAM,GAAI3B,KAAM,IAJ9B,mBAItBoH,EAJsB,KAIZC,EAJY,OAMLjF,sBAAY5B,EAAgB,CAClD6B,eAAgB,CAAC,CAAEC,MAAOhC,IAC1BwD,YAAa,WACX6C,OAHGW,EANsB,oBAa7B,GAAIrF,EAAS,OAAO,KASpB,SAASsF,IAELJ,GADED,GAYN,SAASjC,EAAkBxC,GACzB,IAAIC,EAAMD,EAAEE,OAAOhB,KACfvC,EAAQqD,EAAEE,OAAOvD,MAET,SAARsD,IAAgBtD,GAASA,GAE7BiI,EAAY,2BAAKD,GAAN,kBAAiB1E,EAAMtD,KAepC,OACE,sBAAK0D,UAAU,kBAAf,UACE,oBAAIA,UAAU,eAAd,0BADF,UAGGZ,EAAKiC,eAHR,aAGG,EAAcmB,KAAI,SAACnB,GAClB,OACE,sBAAKrB,UAAU,gCAAf,UACE,6BAAKqB,EAAQxC,OACb,6BAAKwC,EAAQnE,aAKlBkH,EACC,uBAAM/B,SA1BZ,SAAoB1C,GAClBA,EAAEU,iBACFmE,EAAc,CACZtF,UAAW,CACTL,KAAMyF,EAASzF,KACf3B,KAAMoH,EAASpH,QAGnBuH,KAkBgCzE,UAAU,0BAAtC,UACE,6CACA,uBACEC,SAAUkC,EACVtD,KAAK,OACLmB,UAAU,YACVE,KAAK,OACLyC,YAAY,SAEd,uBACE1C,SAAUkC,EACVtD,KAAK,OACLmB,UAAU,iBACVE,KAAK,SACLyC,YAAY,OACZD,IAAI,IACJgC,IAAI,IACJC,KAAK,WAEP,uBAAO3E,UAAU,iBAAiBE,KAAK,WACvC,wBAAQE,QA5DhB,WACEmE,EAAY,CAAC1F,KAAK,GAAI3B,KAAM,IAC5BuH,KA0DqCzE,UAAU,kBAAzC,uBAGF,GAEF,wBAAQI,QAASqE,EAAWzE,UAAU,mCAAtC,oBChGC,SAAS4E,IAEd,IAAMhE,EAAUC,cAFM,EAGcjC,mBAAS,IAHvB,mBAGfiG,EAHe,KAGHC,EAHG,OAI2B7B,uBAAanF,GAJxC,mBAIdiH,EAJc,YAIF5F,EAJE,EAIFA,QAAe6F,EAJb,EAIO5F,KA4C7B,OAzCAU,qBAAU,WACR,GAAGkF,GAAYA,EAASD,UAAW,CACjC,IAAI3G,EAAW,CACbO,IAAMqG,EAASD,UAAUpG,IACzBsG,KAAOD,EAASD,UAAUE,MAI5B,OAFA1G,aAAa2G,QAAQ,WAAY7G,KAAK8G,UAAU/G,IAExC4G,EAASD,UAAUE,MACzB,IAAK,WAEHxG,QAAQC,IAAI,YACZkC,EAAQM,KAAK,aACb,MAEF,IAAK,QACHzC,QAAQC,IAAI,SACZkC,EAAQM,KAAK,cAIlB,CAAC/B,EAAS6F,IAqBX,qBAAKhF,UAAU,iCAAf,SACE,sBAAKA,UAAU,mDAAf,UACE,oBAAIA,UAAU,iBAAd,mBACA,uBAAMqC,SAdZ,SAAqB1C,GACnBA,EAAEU,iBACF0E,EAAU,CACR7F,UAAW,CACTJ,MAAO+F,MAUsB7E,UAAU,kCAAvC,UACE,0CACA,uBAAOA,UAAU,mBAAmBC,SAxB5C,SAAqBN,GACnBmF,EAAcnF,EAAEE,OAAOvD,QAuB0C4D,KAAK,UAChE,uBAAOF,UAAU,iBAAiBE,KAAK,mBCxD1C,SAASkF,IACd,IAAMxE,EAAUC,cACVwE,EAAQvE,cAYd,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyC,KAAI,sBAAX,SACE,cAACT,EAAD,MAGF,cAAC,IAAD,CAAOS,KAAI,UAAK8B,EAAM9B,KAAX,YAAX,SACE,cAAC5C,EAAD,MAGF,cAAC,IAAD,CAAO4C,KAAM8B,EAAM9B,KAAnB,SACE,qBAAKvD,UAAU,gBAAf,SACE,sBAAKA,UAAU,iDAAf,UACI,sBAAKA,UAAU,mDAAf,UACE,oBAAIA,UAAU,gBAAd,gCAEA,gCACE,wBAAQI,QAAS,kBA3BbmD,EA2B8B,GAAD,OAAI8B,EAAMC,IAAV,iBA1B/C1E,EAAQM,KAAKqC,GADf,IAAoBA,GA2BuDvD,UAAU,8BAArE,gCACA,wBAAQI,QAxBxB,WACE7B,aAAagH,QACb3E,EAAQM,KAAK,WAsB8BlB,UAAU,uBAAvC,0BAKJ,sBAAKA,UAAU,kCAAf,UAEE,sBAAKA,UAAU,mDAAf,UACE,oBAAIA,UAAU,WAAd,4BACA,cAAC7B,EAAD,OAIF,sBAAK6B,UAAU,wCAAf,UACE,oBAAIA,UAAU,gBAAd,+BACA,cAACwD,EAAD,oBChDX,SAASgC,IACd,IAAM5E,EAAUC,cAQhB,OACE,sBAAKb,UAAU,2BAAf,UACE,sBAAKA,UAAU,6CAAf,UACA,oBAAIA,UAAU,gBAAd,6BACA,wBAAQA,UAAU,uBAAuBI,QAV7C,WACE7B,aAAagH,QACb3E,EAAQM,KAAK,WAQX,uBAGA,qBAAKlB,UAAU,QAAf,SACE,cAACmE,EAAD,MAEF,qBAAKnE,UAAU,OAAf,SACE,cAAC4D,EAAD,SCkBO6B,MAlCf,WACE,OACE,cAAC,IAAD,UACE,cAAC,iBAAD,CAAgBnF,OAAQA,EAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,KAAK,SAAZ,SACE,cAACqB,EAAD,MAEF,cAAC,IAAD,CAAOrB,KAAK,SAAZ,SACE,cAACiC,EAAD,MAEF,cAAC,IAAD,CAAOjC,KAAK,YAAZ,SACE,cAAC6B,EAAD,MAEF,cAAC,IAAD,CAAO7B,KAAK,kBAAZ,SACE,cAAC6B,EAAD,MAEF,cAAC,IAAD,CAAOM,OAAK,EAACnC,KAAK,IAAlB,SACGhF,aAAaC,QAAQ,YACkC,UAAtDH,KAAKC,MAAMC,aAAaC,QAAQ,aAAayG,KAC3C,cAAC,IAAD,CAAUU,GAAG,WAEb,cAAC,IAAD,CAAUA,GAAG,cAGf,cAAC,IAAD,CAAUA,GAAG,qBCpBZC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.97420b6c.chunk.js","sourcesContent":["function currencify(value) {\r\n  value = value.toFixed(2)\r\n  let valueStr = value.toString()\r\n  let valueCommas = valueStr.split('.')\r\n  valueStr = valueCommas[0].split('').reverse()\r\n  \r\n  let output = ''\r\n  for(let i = 0; i < valueStr.length; i++){\r\n    if ( i%3 ===0 && i > 0) {\r\n      output = ',' + output\r\n    }\r\n   output = valueStr[i] + output\r\n  }\r\n  return output + `.${valueCommas[1]}`\r\n\r\n}\r\n\r\nmodule.exports = { currencify }","function premiDasar(price, rate, time) {\r\n  return (price * rate) / (1000 * time)\r\n}\r\n\r\nconst adminFee = 10000\r\n\r\nfunction biayaTotal(price, rate, time) {\r\n  return (premiDasar(price, rate, time)) + adminFee\r\n}\r\n\r\n\r\nmodule.exports = {premiDasar, adminFee, biayaTotal}","import { gql } from \"@apollo/client\"\r\n\r\nexport const GET_PREMI = gql`\r\n  query GetPremi {\r\n    premi {\r\n      time\r\n      okupasi\r\n      harga\r\n      konstruksi\r\n      alamat\r\n      provinsi\r\n      kota\r\n      kabupaten\r\n      daerah\r\n      gempa\r\n    }\r\n  }\r\n`\r\n\r\n\r\nexport const GET_OKUPASI = gql`\r\n  query Okupasi {\r\n    okupasi {\r\n      _id\r\n      name\r\n      rate\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_ONE_OKUPASI = gql`\r\n  query FindOneOkupasi($_id:String){\r\n    findOneOkupasi(_id:$_id){\r\n      name\r\n      rate\r\n    }\r\n  }\r\n`\r\n\r\nexport const EDIT_OKUPASI = gql`\r\n  query EditOneOkupasi($_id:String, $name:String, $rate:Float){\r\n    editOkupasi(_id:$_id, name:$name, rate:$rate){\r\n      name\r\n      rate\r\n    }\r\n  }\r\n`\r\n\r\nexport const INSERT_OKUPASI = gql`\r\n  mutation InsertOkupasi($name:String, $rate:Float){\r\n    insertOkupasi(name:$name, rate:$rate){\r\n      name\r\n      rate\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_USER_REQUESTS = gql`\r\n  query FindUserRequests($_id: String){\r\n    findUserRequests(_id:$_id){\r\n      polis\r\n      invoice\r\n      status\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_ALL_REQUESTS = gql`\r\n  query GetAllRequests{\r\n    request{\r\n      _id\r\n      invoice\r\n      alamat\r\n      okupasi\r\n      harga\r\n      time\r\n      status\r\n    }\r\n  }\r\n`\r\n\r\n\r\nexport const GET_USERS = gql`\r\n  query Users {\r\n    users {\r\n      _id\r\n      role\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\nexport const GET_ONE_USER = gql`\r\n  query FindOneUser($_id: String) {\r\n    findOneUser(_id: $_id) {\r\n      name\r\n      email\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_LOGIN = gql`\r\n  query UserLogin($email: String) {\r\n    userLogin(email: $email) {\r\n      _id\r\n      role\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_USER = gql`\r\n  mutation UpdateUser($_id: String, $data: EditUserInput) {\r\n    updateUser(_id: $_id, data: $data) {\r\n      name\r\n      email\r\n    }\r\n  }\r\n`\r\n\r\nexport const ADD_ONE_REQUEST = gql`\r\n  mutation InsertRequest($_id: String, $data: RequestInput) {\r\n    insertRequest(_id: $_id, data: $data) {\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_ONE_REQUEST = gql`\r\n  query FindOneRequest($_id:String){\r\n    findOneRequest(_id:$_id){\r\n      time\r\n      invoice\r\n      harga\r\n      okupasi\r\n    }\r\n  }\r\n`\r\nexport const ADMIN_UPDATE_STATUS = gql`\r\n  mutation AdminUpdateStatus($_id:String, $invoice:String, $status:String) {\r\n    adminChangeStatus(_id:$_id, invoice:$invoice, status:$status){\r\n      time\r\n    }\r\n  }\r\n`","import { useState, useEffect } from \"react\"\r\nimport { useQuery, useMutation } from \"@apollo/client\"\r\nimport { GET_ONE_USER, UPDATE_USER } from \"../query/\"\r\n\r\nexport function UserUpdate() {\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  console.log(userInfo._id, '<< user info id')\r\n  const [userInput, setUserInput] = useState({ name: \"\", email: \"\" })\r\n  const { loading, error, data } = useQuery(GET_ONE_USER, {\r\n    variables: { \r\n      _id: userInfo._id \r\n    },\r\n  })\r\n\r\n  const [updateUser] = useMutation(UPDATE_USER, {\r\n    refetchQueries: [{ query: GET_ONE_USER }]\r\n  })\r\n\r\n  useEffect(() => {\r\n    if(data) {\r\n      setUserInput({\r\n        name: data.findOneUser.name,\r\n        email: data.findOneUser.email\r\n      })\r\n    }\r\n  }, [data])\r\n\r\n  function handleUserUpdate(e) {\r\n    e.preventDefault()\r\n    updateUser({\r\n      variables: {\r\n        _id: userInfo._id,\r\n        data: {\r\n          name: userInput.name,\r\n          email: userInput.email\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  function handleInput(e) {\r\n    let key = e.target.name\r\n    let value = e.target.value\r\n\r\n    setUserInput({...userInput, [key] : value})\r\n    console.log(userInput)\r\n  }\r\n\r\n  if (loading) return null\r\n\r\n  return (\r\n    <form className=\"mt-5 flex flex-col items-center\">\r\n      <div className=\"flex flex-col my-2\">\r\n        <label>Name</label>\r\n        <input\r\n          className=\"border px-1 py-2\"\r\n          onChange={handleInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          defaultValue={data.findOneUser.name}\r\n        />\r\n      </div>\r\n      <div className=\"flex flex-col my-2\">\r\n        <label>Email</label>\r\n        <input\r\n          className=\"border px-1 py-2\"\r\n          onChange={handleInput}\r\n\r\n          type=\"email\"\r\n          name=\"email\"\r\n          defaultValue={data.findOneUser.email}\r\n        />\r\n      </div>\r\n      <button onClick={handleUserUpdate} className=\"p-2 bg-green-200 mt-5\" type=\"submit\">\r\n        Update Data\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n","import {ApolloClient, InMemoryCache, gql} from '@apollo/client'\r\nimport {GET_PREMI} from '../query/'\r\n\r\nexport const client = new ApolloClient({\r\n  // uri: 'http://localhost:4000',\r\n  uri: `http://13.251.3.58:4000`,\r\n  cache: new InMemoryCache()\r\n})\r\n\r\nclient.writeQuery({\r\n  query: GET_PREMI,\r\n  data: {\r\n    premi: {}\r\n  }\r\n})","import { useState, useEffect } from \"react\"\r\nimport { useMutation, useQuery } from \"@apollo/client\"\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\"\r\nimport { client } from \"../config/graphql\"\r\nimport {\r\n  ADD_ONE_REQUEST,\r\n  GET_PREMI,\r\n  GET_OKUPASI,\r\n  GET_USER_REQUESTS,\r\n} from \"../query/\"\r\n\r\nexport function UserRequestForm() {\r\n  const history = useHistory()\r\n  const match = useRouteMatch()\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  const { loading, error, data: okupasiData } = useQuery(GET_OKUPASI)\r\n  const [\r\n    addRequest,\r\n    { data: requestReturnData, loading: addRequestLoading },\r\n  ] = useMutation(ADD_ONE_REQUEST, {\r\n    onCompleted: (data) => {\r\n      addRequestComplete(data)\r\n    },\r\n    refetchQueries: [\r\n      { query: GET_USER_REQUESTS, variables: { _id: userInfo._id } },\r\n    ],\r\n  })\r\n\r\n  const [formInput, setFormInput] = useState({\r\n    time: 1,\r\n    okupasi: \"\",\r\n    harga: 0,\r\n    konstruksi: \"kelas 1\",\r\n    alamat: \"\",\r\n    provinsi: \"\",\r\n    kota: \"\",\r\n    kabupaten: \"\",\r\n    daerah: \"\",\r\n    gempa: false,\r\n    status: \"pending\",\r\n  })\r\n  const [inputError, setInputError] = useState(false)\r\n\r\n  function handleInputChange(e) {\r\n    let key = e.target.name\r\n    let value = e.target.value\r\n\r\n    setInputError(false)\r\n\r\n    if (key === \"time\" || key === \"harga\") {\r\n      value = +value\r\n    }\r\n\r\n    if (key === \"gempa\") {\r\n      e.target.checked ? (value = true) : (value = false)\r\n    }\r\n\r\n    setFormInput({ ...formInput, [key]: value })\r\n  }\r\n\r\n  function checkFormInput() {\r\n    for (const key in formInput) {\r\n      if (formInput[key] === \"\" || formInput[key] === \"0\") {\r\n        setInputError(true)\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  function handleFormSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (checkFormInput()) {\r\n      addRequest({\r\n        variables: {\r\n          _id: userInfo._id,\r\n          data: formInput,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  function addRequestComplete({ insertRequest }) {\r\n    history.push(`/customer/premi/${insertRequest._id}`)\r\n  }\r\n\r\n  if (loading) return null\r\n\r\n  return (\r\n    <div className=\"flex px-12 py-5\">\r\n      <div className=\"w-full border\">\r\n        <h1 className=\"text-2xl mb-5 text-center py-5\">\r\n          Form Request Asuransi Kebakaran\r\n        </h1>\r\n\r\n        <form onSubmit={handleFormSubmit} className=\"flex flex-col mx-14 p-5\">\r\n          <label>Jangka Waktu Pertanggungan</label>\r\n          <select\r\n            onChange={handleInputChange}\r\n            name=\"time\"\r\n            className=\"border mb-4\"\r\n          >\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"4\">4</option>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"6\">6</option>\r\n            <option value=\"7\">7</option>\r\n            <option value=\"8\">8</option>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"10\">10</option>\r\n          </select>\r\n\r\n          <label>Okupasi</label>\r\n          <select\r\n            onChange={handleInputChange}\r\n            name=\"okupasi\"\r\n            className=\"border  mb-4\"\r\n            defaultValue=\"\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              -- Select Okupasi --\r\n            </option>\r\n            {okupasiData.okupasi.map((item) => {\r\n              return (\r\n                <option key={item._id} value={item._id}>\r\n                  {item.name}\r\n                </option>\r\n              )\r\n            })}\r\n          </select>\r\n\r\n          <label>Harga Bangunan</label>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"harga\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            placeholder=\"0\"\r\n            className=\"border py-1 px-3  mb-4\"\r\n          />\r\n\r\n          <label>Konstruksi</label>\r\n          <select\r\n            onChange={handleInputChange}\r\n            name=\"konstruksi\"\r\n            className=\"border mb-4\"\r\n          >\r\n            <option value=\"kelas 1\">Kelas 1</option>\r\n            <option value=\"kelas 2\">Kelas 2</option>\r\n            <option value=\"kelas 3\">Kelas 3</option>\r\n          </select>\r\n\r\n          <label>Alamat Objek Pertanggungan</label>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"alamat\"\r\n            className=\"border py-1 px-3  mb-4\"\r\n            type=\"text\"\r\n          />\r\n\r\n          <label>Provinsi</label>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"provinsi\"\r\n            className=\"border py-1 px-3  mb-4\"\r\n            type=\"text\"\r\n          />\r\n\r\n          <label>Kota</label>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"kota\"\r\n            className=\"border py-1 px-3  mb-4\"\r\n            type=\"text\"\r\n          />\r\n\r\n          <label>Kabupaten</label>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"kabupaten\"\r\n            className=\"border py-1 px-3 mb-4\"\r\n            type=\"text\"\r\n          />\r\n\r\n          <label>Daerah</label>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"daerah\"\r\n            className=\"border py-1 px-3  mb-4\"\r\n            type=\"text\"\r\n          />\r\n\r\n          <label>Gempa Bumi</label>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"gempa\"\r\n            className=\"border  mb-4\"\r\n            type=\"checkbox\"\r\n          />\r\n          {inputError ? (\r\n            <h1 className=\"text-red-600\">Please fill all input</h1>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <input type=\"submit\" value=\"Cek Premi\" className=\"bg-green-100 py-2\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { client } from \"../config/graphql\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { GET_ONE_REQUEST, GET_OKUPASI, GET_ONE_OKUPASI } from \"../query/\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\"\r\nimport { premiDasar, adminFee, biayaTotal } from \"../helpers/premiCalculate\"\r\nimport { currencify } from \"../helpers/currencify\"\r\n\r\nexport function UserCheckPremi() {\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const [\r\n    getOneOkupasi,\r\n    { loading: okupasiLoading, data: dataOku },\r\n  ] = useLazyQuery(GET_ONE_OKUPASI)\r\n\r\n  const { loading, error, data } = useQuery(GET_ONE_REQUEST, {\r\n    variables: { _id: id },\r\n    onCompleted: ({ findOneRequest }) => {\r\n      getOneOkupasi({ variables: { _id: findOneRequest.okupasi } })\r\n    },\r\n  })\r\n\r\n  function navigateTo(path) {\r\n    history.push(path)\r\n  }\r\n\r\n  if (loading) return null\r\n\r\n  if (!data || !dataOku) return null\r\n\r\n  return (\r\n    <div className=\"flex flex-col px-20 py-10 border\">\r\n      <h1 className=\"text-3xl mb-8\">Premi Detail</h1>\r\n\r\n      <div className=\"flex flex-row justify-between\">\r\n        <div className=\"flex flex-col\">\r\n          <h1 className=\"text-xl mb-5\">Premi</h1>\r\n\r\n          <h2>Asuransi Kebakaran</h2>\r\n          <h2>Jenis Okupasi : {dataOku.findOneOkupasi.name}</h2>\r\n          <h2>No. Invoice : {data.findOneRequest.invoice}</h2>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col\">\r\n          <h1 className=\"text-xl mb-5\">Periode</h1>\r\n\r\n          <h2>{data.findOneRequest.time} tahun</h2>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col\">\r\n          <h1 className=\"text-xl mb-5\">Harga Bangunan</h1>\r\n\r\n          <h2>Rp {currencify(data.findOneRequest.harga)}</h2>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col items-end mt-5\">\r\n        <h1 className=\"text-lg\">\r\n          Premi Dasar :{\" \"}\r\n          <span>\r\n            Rp.{\" \"}\r\n            {currencify(\r\n              premiDasar(\r\n                data.findOneRequest.harga,\r\n                dataOku.findOneOkupasi.rate,\r\n                data.findOneRequest.time\r\n              )\r\n            )}\r\n          </span>\r\n        </h1>\r\n\r\n        <h1 className=\"text-lg\">\r\n          Biaya Administrasi : <span>Rp. {currencify(adminFee)}</span>\r\n        </h1>\r\n\r\n        <h1 className=\"text-2xl mt-8\">\r\n          Total :{\" \"}\r\n          <span>\r\n            Rp.{\" \"}\r\n            {currencify(\r\n              biayaTotal(\r\n                data.findOneRequest.harga,\r\n                dataOku.findOneOkupasi.rate,\r\n                data.findOneRequest.time\r\n              )\r\n            )}\r\n          </span>\r\n        </h1>\r\n      </div>\r\n      <div className=\"flex flex-row justify-between mt-10\">\r\n        <button\r\n          onClick={() => {\r\n            navigateTo(\"/customer\")\r\n          }}\r\n          className=\"px-5 py-2 bg-yellow-200\"\r\n        >\r\n          Back to Dashboard\r\n        </button>\r\n        {/* {data.findOneRequest.status !== \"approved\" ? (\r\n          <button className=\"px-5 py-2 bg-green-200 \">Pembayaran</button>\r\n        ) : (\r\n          \"\"\r\n        )} */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useQuery } from \"@apollo/client\"\r\nimport {useHistory} from 'react-router-dom'\r\nimport { GET_USER_REQUESTS } from \"../query/\"\r\n\r\nexport function UserRequestList() {\r\n  const history = useHistory()\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  console.log(userInfo)\r\n  const { loading, error, data } = useQuery(GET_USER_REQUESTS, {\r\n    variables: { _id: userInfo._id },\r\n  })\r\n\r\n  function goToRequestDetail(_id) {\r\n    history.push(`/customer/premi/${_id}`)\r\n  }\r\n\r\n  if(loading) return null\r\n\r\n  if(data.findUserRequests.length === 0 ) return(\r\n    <div>\r\n      <h1>No Requests found</h1>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n  <div className=\"w-full\">\r\n    \r\n    {/* {JSON.stringify(data)} */}\r\n\r\n    <table className=\"w-full\">\r\n      <thead>\r\n        <tr className=\"bg-gray-700 text-white font-bold\">\r\n          <th className=\"py-2\">No Polis</th>\r\n          <th>Jenis Penanggungan</th>\r\n          <th>No Invoice</th>\r\n          <th>Status</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {\r\n          data.findUserRequests?.map(request => {\r\n            return(\r\n              <tr className=\"bg-gray-100 text-center\">\r\n                <td className=\"py-3\">{request.polis?request.polis:'Belum Terbit'}</td>\r\n                <td>Asuransi Kebakaran</td>\r\n                <td>{request.invoice}</td>\r\n                <td>{request.status===\"approved\"?'Sudah Dibayar':'Belum Dibayar'}</td>\r\n                <td><button className=\"bg-green-200 px-5 py-1\" onClick={() => {goToRequestDetail(request._id)}}>Cek Rincian</button></td>\r\n              </tr>\r\n            )\r\n          })\r\n        }\r\n\r\n\r\n      </tbody>\r\n    </table>\r\n  \r\n  </div>\r\n  \r\n  )\r\n}\r\n","import { useQuery, useMutation } from \"@apollo/client\"\r\nimport { GET_ALL_REQUESTS, GET_OKUPASI, ADMIN_UPDATE_STATUS } from \"../query/\"\r\nimport { currencify } from \"../helpers/currencify\"\r\nimport { biayaTotal } from \"../helpers/premiCalculate\"\r\n\r\nexport function AdminRequestList() {\r\n  const { loading, error, data, refetch } = useQuery(GET_ALL_REQUESTS)\r\n  const { loading: loadingOku, data: dataOku } = useQuery(GET_OKUPASI)\r\n\r\n  const [adminUpdateStatus] = useMutation(ADMIN_UPDATE_STATUS, {\r\n    onCompleted: () => {\r\n      refetch()\r\n    },refetchQueries:[{query:GET_ALL_REQUESTS}]\r\n  })\r\n\r\n  const okupasiSearch = (value) => {\r\n    return dataOku.okupasi.find((item) => item._id === value)\r\n  }\r\n\r\n  const unApprovedData = () => {\r\n    return data.request.filter(el => el.status !== \"approved\")\r\n  }\r\n\r\n  function updateStatus(_id, invoice, status) {\r\n    console.log(_id)\r\n    adminUpdateStatus({ variables: { _id, invoice, status } })\r\n  }\r\n\r\n\r\n  if (loading || loadingOku) return null\r\n\r\n  return (\r\n    <div className=\"flex flex-col bg-gray-100 p-5\">\r\n      <h1 className=\"text-xl mb-2\">Request List</h1>\r\n\r\n      <table className=\"\">\r\n        <thead>\r\n          <tr className=\"bg-gray-700 text-white font-bold\">\r\n            <th className=\"py-2\">No Invoice</th>\r\n            <th>Alamat</th>\r\n            <th>Tipe Okupasi</th>\r\n            <th>Total</th>\r\n            <th>Status</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {\r\n          data.request?.map((request) => {\r\n            return (\r\n              <tr className=\"text-center py-2 bg-gray-200\">\r\n                <td>{request.invoice}</td>\r\n                <td>{request.alamat}</td>\r\n                <td>{okupasiSearch(request.okupasi).name}</td>\r\n                <td>\r\n                  Rp.{\" \"}\r\n                  {currencify(\r\n                    biayaTotal(\r\n                      request.harga,\r\n                      okupasiSearch(request.okupasi).rate,\r\n                      request.time\r\n                    )\r\n                  )}\r\n                </td>\r\n                <td>{request.status}</td>\r\n                <td>\r\n                  <button onClick={()=>{updateStatus(request._id, request.invoice, \"approved\")}} className=\"bg-green-100 px-3 py-1 my-1\">\r\n                    Approve\r\n                  </button>\r\n                  <button onClick={()=>{updateStatus(request._id, request.invoice, \"rejected\")}} className=\"bg-red-200 px-3 py-1 my-1 ml-2\">\r\n                    Reject\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useQuery, useMutation } from \"@apollo/client\"\r\nimport { GET_OKUPASI, INSERT_OKUPASI, EDIT_OKUPASI } from \"../query/\"\r\nimport { currencify } from \"../helpers/currencify\"\r\nimport { biayaTotal } from \"../helpers/premiCalculate\"\r\n\r\nexport function AdminOkupasi() {\r\n  const { loading, error, data, refetch } = useQuery(GET_OKUPASI)\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [addMode, setAddMode] = useState(false)\r\n  const [addInput, setAddInput] = useState({ name: \"\", rate: 0 })\r\n\r\n  const [insertOkupasi] = useMutation(INSERT_OKUPASI, {\r\n    refetchQueries: [{ query: GET_OKUPASI }],\r\n    onCompleted: () => {\r\n      refetch()\r\n    }\r\n  })\r\n\r\n  if (loading) return null\r\n\r\n  function toggleEdit() {\r\n    if (editMode) {\r\n      setEditMode(false)\r\n    } else {\r\n      setEditMode(true)\r\n    }\r\n  }\r\n  function toggleAdd() {\r\n    if (addMode) {\r\n      setAddMode(false)\r\n    } else {\r\n      setAddMode(true)\r\n    }\r\n  }\r\n\r\n  function cancelSubmit(){\r\n    setAddInput({name:'', rate: 0})\r\n    toggleAdd()\r\n  }\r\n\r\n  function handleInputChange(e) {\r\n    let key = e.target.name\r\n    let value = e.target.value\r\n\r\n    if (key === \"rate\") value = +value\r\n\r\n    setAddInput({ ...addInput, [key]: value })\r\n  }\r\n\r\n  function addOkupasi(e) {\r\n    e.preventDefault()\r\n    insertOkupasi({\r\n      variables: {\r\n        name: addInput.name,\r\n        rate: addInput.rate,\r\n      },\r\n    })\r\n    toggleAdd()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"bg-blue-100 p-5\">\r\n      <h1 className=\"text-lg mb-4\">Okupasi List</h1>\r\n\r\n      {data.okupasi?.map((okupasi) => {\r\n        return (\r\n          <div className=\"flex flex-row justify-between\">\r\n            <h1>{okupasi.name}</h1>\r\n            <h1>{okupasi.rate}</h1>\r\n          </div>\r\n        )\r\n      })}\r\n\r\n      {addMode ? (\r\n        <form onSubmit={addOkupasi} className=\"flex flex-col px-2 mt-4\">\r\n          <h1>Add Okupasi</h1>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"name\"\r\n            className=\"px-2 py-1\"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n          />\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"rate\"\r\n            className=\"mt-1 px-2 py-1\"\r\n            type=\"number\"\r\n            placeholder=\"Rate\"\r\n            min=\"0\"\r\n            max=\"3\"\r\n            step=\"0.0005\"\r\n          />\r\n          <input className=\"mt-3 px-2 py-1\" type=\"submit\" />\r\n          <button onClick={cancelSubmit} className=\"bg-red-200 mt-2\">Cancel</button>\r\n        </form>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <button onClick={toggleAdd} className=\"bg-green-300 px-3 py-1 mt-4 mr-5\">\r\n        Add\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {useQuery, useLazyQuery} from '@apollo/client'\r\nimport {GET_USERS, USER_LOGIN} from '../query/'\r\n\r\nexport function Login() {\r\n  // const { loading, error, data } = useQuery(GET_USERS)\r\n  const history = useHistory()\r\n  const [inputEmail, setInputEmail] = useState('')\r\n  const [ userLogin, {loading, data: userData} ] = useLazyQuery(USER_LOGIN)\r\n\r\n\r\n  useEffect(() => {\r\n    if(userData && userData.userLogin) {\r\n      let userInfo = {\r\n        _id : userData.userLogin._id,\r\n        role : userData.userLogin.role\r\n      }\r\n      localStorage.setItem('userInfo', JSON.stringify(userInfo))\r\n\r\n      switch (userData.userLogin.role) {\r\n        case 'customer':\r\n\r\n          console.log('customer')\r\n          history.push('/customer')\r\n          break;\r\n      \r\n        case 'admin' : \r\n          console.log('admin')\r\n          history.push('/admin')\r\n          break;\r\n      }\r\n    }\r\n  }, [loading, userData] )\r\n\r\n  function handleInput(e) {\r\n    setInputEmail(e.target.value)\r\n  }\r\n\r\n  function test(){\r\n    console.log(localStorage.getItem('userInfo'))\r\n  }\r\n\r\n  function handleLogin(e) {\r\n    e.preventDefault()\r\n    userLogin({\r\n      variables: {\r\n        email: inputEmail\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  return(\r\n    <div className=\"flex px-8 py-10 justify-center\">\r\n      <div className=\"flex flex-col justify-center items-center border\">\r\n        <h1 className=\"text-2xl py-12\">Login</h1>\r\n        <form onSubmit={handleLogin} className=\"flex flex-col items-center p-12\">\r\n          <label>Email</label>\r\n          <input className=\"border px-5 py-2\" onChange={handleInput} type=\"email\"/>\r\n          <input className=\"px-8 py-2 mt-5\" type=\"submit\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import {Navbar, UserUpdate, UserRequestForm, UserCheckPremi, UserRequestList} from '../components/'\r\nimport {useHistory, Switch, Route, useRouteMatch} from 'react-router-dom'\r\nimport {useQuery} from '@apollo/client'\r\n\r\nexport function CustomerDashboard() {\r\n  const history = useHistory()\r\n  const match = useRouteMatch()\r\n\r\n  function navigateTo(path) {\r\n    history.push(path)\r\n  }\r\n\r\n  function userLogout(){\r\n    localStorage.clear()\r\n    history.push('/login')\r\n  }\r\n\r\n\r\n  return(\r\n    <Switch>\r\n      <Route path={`/customer/premi/:id`}>\r\n        <UserCheckPremi />\r\n      </Route>\r\n      \r\n      <Route path={`${match.path}/new-req`}>\r\n        <UserRequestForm />\r\n      </Route>\r\n\r\n      <Route path={match.path}>\r\n        <div className=\"flex flex-col\">\r\n          <div className=\"flex flex-col justify-start items-center py-10\">\r\n              <div className=\"flex flex-row w-full justify-around items-center\">\r\n                <h1 className=\"text-3xl mb-8\">Customer Dashboard</h1>\r\n\r\n                <div>\r\n                  <button onClick={() => navigateTo(`${match.url}/new-req`)} className=\"bg-green-200 px-5 py-2 mr-3\">Submit New Request</button>\r\n                  <button onClick={userLogout} className=\"bg-red-200 px-5 py-2\">Logout</button>\r\n\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-row w-full px-20 mt-8\">\r\n\r\n                <div className=\"flex flex-col items-center bg-gray-100 p-4 w-1/4\">\r\n                  <h1 className=\"text-2xl\">Update Details</h1>\r\n                  <UserUpdate />\r\n                </div>\r\n\r\n\r\n                <div className=\"flex flex-col items-center w-3/4 mx-4\">\r\n                  <h1 className=\"text-2xl mb-5\">User Request List</h1>\r\n                  <UserRequestList />\r\n                </div>\r\n\r\n              </div>\r\n\r\n          </div>\r\n        </div>\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}","import {AdminRequestList, AdminOkupasi} from '../components/'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport function AdminDashboard() {\r\n  const history = useHistory()\r\n\r\n  function adminLogout(){\r\n    localStorage.clear()\r\n    history.push('/login')\r\n  }\r\n  \r\n  \r\n  return(\r\n    <div className=\"flex flex-col px-12 py-8\">\r\n      <div className=\"flex flex-row justify-between items-center\">\r\n      <h1 className=\"text-3xl mb-5\">Admin Dashboard</h1>\r\n      <button className=\"px-4 py-2 bg-red-300\" onClick={adminLogout}>Logout</button>\r\n      </div>\r\n\r\n      <div className=\"w-1/4\">\r\n        <AdminOkupasi />\r\n      </div>\r\n      <div className=\"mt-8\">\r\n        <AdminRequestList />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import \"./App.css\"\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\"\nimport { Navbar } from \"./components/\"\nimport { Home, AdminDashboard, CustomerDashboard, Login } from \"./pages/\"\nimport { ApolloProvider } from \"@apollo/client\"\nimport { client } from \"./config/graphql\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ApolloProvider client={client}>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/admin\">\n            <AdminDashboard />\n          </Route>\n          <Route path=\"/customer\">\n            <CustomerDashboard />\n          </Route>\n          <Route path=\"/customer/premi\">\n            <CustomerDashboard />\n          </Route>\n          <Route exact path=\"/\">\n            {localStorage.getItem(\"userInfo\") ? (\n              JSON.parse(localStorage.getItem(\"userInfo\")).role === \"admin\" ? (\n                <Redirect to=\"/admin\" />\n              ) : (\n                <Redirect to=\"/customer\" />\n              )\n            ) : (\n              <Redirect to=\"/login\" />\n            )}\n          </Route>\n        </Switch>\n      </ApolloProvider>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}